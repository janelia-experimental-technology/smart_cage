* Smart Cage Software Proposal

** Description

   The SmartCage allows mice to perform voluntary head-fixations in their home
   cage to facilitate behavior training and experiments without human
   supervision.

** Overview

   A researcher coordinates a set of SmartCages and mice, setting up behavior
   training or experiments that will run automatically and independently on each
   SmartCage. The researcher may monitor the set of SmartCages remotely or
   in-person and intervene if needed, but direct supervision is not necessary
   for operation.

   Each SmartCage contains a mouse with a headbar, a tunnel module with latches
   and sensors, and training or experiment modules for interacting with and
   collecting data from the mouse. For example, a motorized lickport module may
   be used for dispensing water at different positions and sensing licks.

   A SmartCage runs a training period lasting approximately one month. One
   training session runs each day of the training period for part of the day.

** Svoboda Lab Request

*** Matlab Bpod

    - integrate the existing Python and Matlab scripts
    - easily communicate between Matlab code (Bpod) and Python code (SmartCage)
      using the Robot Operating System (ROS)
    - create a GUI to quickly browse through/monitor all the mice training
      states
    - alarm systems to notify users when either component crashes or mice do not
      perform well
    - want to be able to have multiple mice automatically train themselves
    - want to monitor their health/training remotely 24/7

*** Python Bpod

    - provide example code showing the PyBpod scripts can control the SmartCage
      (e.g. lickport positions, latching) via ROS
    - alarm systems to notify users when either component crashes or mice do not
      peroform well

** Architecture



** Time Estimates

   - test

| task | hours |
|      |       |
